#!/usr/bin/env python
# vim: set fileencoding=UTF-8 filetype=python :
#
#  When the configuration file is loaded, several automatic transformations
#  are applied:
#
# 1) '{cfg_abs_path}' as a substring of atomic attributes is replaced by
#    an absolute path of the configuration files.  This can be used to
#    make the configuration file independent of the location of programs
#    using the configuration file.
#
# or better user use the as_project_path function

import os.path
import random

# Initialise the generators so that the NLG sample different templates every
# time you start the system.
random.seed()

from alex.utils.config import as_project_path, online_update
from alex.utils.analytics import Analytics
from alex.components.dm.dddstate import DeterministicDiscriminativeDialogueState
from alex.applications.PublicTransportInfoCS.hdc_policy import PTICSHDCPolicy
from alex.applications.PublicTransportInfoCS.directions import CRWSDirectionsFinder
from alex.applications.PublicTransportInfoCS.preprocessing import PTICSSLUPreprocessing
from alex.components.slu.dailrclassifier import DAILogRegClassifier
from alex.components.nlg.tools.cs import CzechTemplateNLGPostprocessing
from alex.applications.PublicTransportInfoCS.preprocessing import PTICSNLGPreprocessing

config = {
  'PublicTransportInfoCS': {
    'max_turns': 120,
  },
  'Analytics': 
     Analytics('UA-41905278-1', 'cuni.cz'), 
  'VoipIO': {
    'pjsip_log_level': 3,
    'debug': True,
    'reject_calls': False,
    'allowed_phone_numbers': r"(^[234567])",
    'forbidden_phone_number': r"(^112$|^150$|^155$|^156$|^158$)",
    'allowed_users': r"(^[234567])",
    'forbidden_users': r"(^112$|^150$|^155$|^156$|^158$)",
    'allowed_hosts': r"",
    'forbidden_hosts': r"",
  },
  'ASR': {
    'debug': True,
    'type': 'Google',
    'Google': {
      'debug': False,
      'language': 'cs'
    }
  },
  'SLU': {
    'debug': True,
    'type': DAILogRegClassifier,
    DAILogRegClassifier: {
        'cldb_fname': as_project_path("applications/PublicTransportInfoCS/data/database.py"),
        'preprocessing_cls': PTICSSLUPreprocessing,
        'model_fname': online_update("applications/PublicTransportInfoCS/slu/dailogreg.nbl.model.all"),
    },
  },
  'DM': {
    'debug': True,
    'type': 'basic',
    'epilogue': {
        # if set to None, no question is asked
        'final_question': u"Mám ještě jednu poslední otázku. Podařilo se Vám získat požadovanou informaci?",
        # if set to None, no code is given
        # if set to a valid url, a code is given and reported to the url as "url.format(code=code)"
        'final_code_url': None,
        #'final_code_url': 'http://vystadial.ms.mff.cuni.cz/~jurcicek/code.py?code={code}',
        # the message is generated as "final_code_text.format(code=code)"
        'final_code_text': u'Váš kód je {code} .',
        'final_code_text_repeat': u' Opakuji. ',
        # initialise the seed of the code generation algorithm
        'code_seed': 1,
    },
    'basic': {
        'debug': True,
    },
    'ontology': as_project_path('applications/PublicTransportInfoCS/data/ontology.py'),
    'dialogue_state': {
        'type': DeterministicDiscriminativeDialogueState,
     },
    'DeterministicDiscriminativeDialogueState': {
        #'type' : 'MDP',
        'type' : 'UFAL_DSTC_1.0_approx',
    },
    'dialogue_policy': {
        'type': PTICSHDCPolicy,
        'PTICSHDCPolicy': {
            'accept_prob_ludait': 0.5,
            'accept_prob_being_requested': 0.8,
            'accept_prob_being_confirmed': 0.8,
            'accept_prob_being_selected': 0.8,
            'accept_prob_noninformed': 0.8,
            'accept_prob': 0.8,
            'confirm_prob':  0.4,
            'select_prob': 0.4,
            'min_change_prob': 0.1,
        }
    },
    'directions': {
        'type': CRWSDirectionsFinder,
    }
  },
  'NLG': {
    'debug': True,
    'type': 'Template',
    'Template' : {
        'model': as_project_path('applications/PublicTransportInfoCS/nlg_templates.cfg'),
        'ontology': as_project_path('applications/PublicTransportInfoCS/data/ontology.py'), 
        'preprocessing_cls': PTICSNLGPreprocessing,
        'postprocessing_cls': CzechTemplateNLGPostprocessing,
    },
  },
  'TTS': {
    'debug': True,
    'type': 'SpeechTech',
    'SpeechTech': {
        'debug': True,
        'tempo': 1.0,
    },
  },
  'VoipHub': {
    'wait_time_before_calling_back': 10,
    'history_length': 1000,
    'hard_time_limit': 6*60, # maximal length of a dialogue in seconds
    'hard_turn_limit': 120, # maximal number of turn in a dialogue

    'call_db':                         as_project_path('applications/PublicTransportInfoCS/call_db.pckl'),
    'period':                          48*60*60,    # in seconds
    'last_period_max_num_calls':       100,
    'last_period_max_total_time':      120*60,       # in seconds
    'last_period_max_num_short_calls': 5,
    'short_calls_time_duration':       10,          # in seconds
    'blacklist_for' :                  4*60*60,     # in seconds
    'limit_reached_message': u'Děkujeme za zavolání, ale už jste volali hodně. Prosím zavolejte později. Na shledanou.',
  },
  'Logging': {
    'system_name':    "Public Transport Info - Czech",
    'version':        "1.1",
  },

}
